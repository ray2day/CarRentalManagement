@page "/customers/create/"

@inject HttpClient _client
@inject NavigationManager _navManager

<h3 class="card-title">Create New Customer</h3>
<hr />
<br />

<EditForm Model="@customer" OnValidSubmit="CreateCustomer">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Tax Identification Number:</label>
        <div>
            <InputText @bind-Value="customer.TaxId" class="form-control" />
            <ValidationMessage For="@(() => customer.TaxId)" />
        </div>
    </div>
    <div class="form-group">
        <label>E-mail Address:</label>
        <div>
            <InputText @bind-Value="customer.EmailAddress" class="form-control" />
            <ValidationMessage For="@(() => customer.EmailAddress)" />
        </div>
    </div>
    <div class="form-group">
        <label>Contact Number:</label>
        <div>
            <InputText @bind-Value="customer.ContactNumber" class="form-control" />
            <ValidationMessage For="@(() => customer.ContactNumber)" />
        </div>
    </div>
    <div class="form-group">
        <label>Address</label>
        <div>
            <InputTextArea @bind-Value="customer.Address" class="form-control" />
            <ValidationMessage For="@(() => customer.Address)" />
        </div>
    </div>
    
    <button type="submit" class="btn btn-success btn-block">
        Create Customer
    </button>
</EditForm>


@code {
    Customer customer = new Customer();
    private IList<Make> Makes;
    private IList<Model> Models;
    private IList<Colour> Colours;

    protected async override Task OnInitializedAsync()
    {
        Makes = await _client.GetFromJsonAsync<List<Make>>($"{Endpoints.MakesEndpoint}");
        Models = await _client.GetFromJsonAsync<List<Model>>($"{Endpoints.ModelsEndpoint}");
        Colours = await _client.GetFromJsonAsync<List<Colour>>($"{Endpoints.ColoursEndpoint}");
    }

    private async Task CreateCustomer()
    {
        await _client.PostAsJsonAsync(Endpoints.CustomersEndpoint, customer);
        _navManager.NavigateTo("/customers/");
    }
}